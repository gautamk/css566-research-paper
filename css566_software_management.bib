
@inproceedings{lin_why_2016,
	location = {New York, {NY}, {USA}},
	title = {Why Developers Are Slacking Off: Understanding How Software Teams Use Slack},
	isbn = {978-1-4503-3950-6},
	url = {http://doi.acm.org/10.1145/2818052.2869117},
	doi = {10.1145/2818052.2869117},
	series = {{CSCW} '16 Companion},
	shorttitle = {Why Developers Are Slacking Off},
	abstract = {Slack is a modern communication platform for teams that is seeing wide and rapid adoption by software develop-ment teams. Slack not only facilitates team messaging and archiving, but it also supports a wide plethora of inte-grations to external services and bots. We have found that Slack and its integrations (i.e., bots) are playing an increas-ingly signiï¬cant role in software development, replacing email in some cases and disrupting software development processes. To understand how Slack impacts development team dynamics, we designed an exploratory study to inves-tigate how developers use Slack and how they beneï¬t from it. We ï¬nd that developers use Slack for personal, team-wide and community-wide purposes. Our research also reveals that developers use and create diverse integrations (called bots) to support their work. This study serves as the ï¬rst step towards understanding the role of Slack in sup-porting software engineering.},
	pages = {333--336},
	booktitle = {Proceedings of the 19th {ACM} Conference on Computer Supported Cooperative Work and Social Computing Companion},
	publisher = {{ACM}},
	author = {Lin, Bin and Zagalsky, Alexey and Storey, Margaret-Anne and Serebrenik, Alexander},
	urldate = {2016-04-25},
	date = {2016},
	keywords = {Bots, Collaboration, Slack, Social Media, Software Development},
	file = {ACM Full Text PDF:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/24TJS5NV/Lin et al. - 2016 - Why Developers Are Slacking Off Understanding How.pdf:application/pdf}
}

@inproceedings{stolberg_enabling_2009,
	title = {Enabling Agile Testing through Continuous Integration},
	doi = {10.1109/AGILE.2009.16},
	abstract = {A continuous integration system is often considered one of the key elements involved in supporting an agile software development and testing environment. As a traditional software tester transitioning to an agile development environment it became clear to me that I would need to put this essential infrastructure in place and promote improved development practices in order to make the transition to agile testing possible. This experience report discusses a continuous integration implementation I led last year. The initial motivations for implementing continuous integration are discussed and a pre and post-assessment using Martin Fowler's" practices of continuous integration" is provided along with the technical specifics of the implementation. The report concludes with a retrospective of my experiences implementing and promoting continuous integration within the context of agile testing.},
	eventtitle = {Agile Conference, 2009. {AGILE} '09.},
	pages = {369--374},
	booktitle = {Agile Conference, 2009. {AGILE} '09.},
	author = {Stolberg, S.},
	date = {2009-08},
	keywords = {Agile, agile development environment, agile software development, agile testing, Application software, Automated Acceptance Tests, Automated Unit Tests, Automatic testing, Automation, Computer bugs, Continuous Integration, continuous integration system, Feedback, Graphical user interfaces, integrated software, Manuals, Programming profession, program testing, Software engineering, Software testing, System testing},
	file = {IEEE Xplore Abstract Record:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/EW7JVTGX/abs_all.html:text/html;IEEE Xplore Full Text PDF:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/937XEN6T/Stolberg - 2009 - Enabling Agile Testing through Continuous Integrat.pdf:application/pdf}
}

@article{vasilescu_continuous_2014,
	title = {Continuous integration in a social-coding world: Empirical evidence from {GitHub}. **Updated version with corrections**},
	url = {http://arxiv.org/abs/1512.01862},
	doi = {10.1109/ICSME.2014.62},
	shorttitle = {Continuous integration in a social-coding world},
	abstract = {Continuous integration is a software engineering practice of frequently merging all developer working copies with a shared main branch, e.g., several times a day. With the advent of {GitHub}, a platform well known for its "social coding" features that aid collaboration and sharing, and currently the largest code host in the open source world, collaborative software development has never been more prominent. In {GitHub} development one can distinguish between two types of developer contributions to a project: direct ones, coming from a typically small group of developers with write access to the main project repository, and indirect ones, coming from developers who fork the main repository, update their copies locally, and submit pull requests for review and merger. In this paper we explore how {GitHub} developers use continuous integration as well as whether the contribution type (direct versus indirect) and different project characteristics (e.g., main programming language, or project age) are associated with the success of the automatic builds.},
	pages = {401--405},
	journaltitle = {{arXiv}:1512.01862 [cs]},
	author = {Vasilescu, Bogdan and van Schuylenburg, Stef and Wulms, Jules and Serebrenik, Alexander and Brand, Mark G. J. van den},
	urldate = {2016-04-25},
	date = {2014-09},
	eprinttype = {arxiv},
	eprint = {1512.01862},
	keywords = {Computer Science - Software Engineering},
	annotation = {Comment: This is an updated and corrected version of our {ICSME} 2014 paper: http://dx.doi.org/10.1109/{ICSME}.2014.62},
	file = {arXiv\:1512.01862 PDF:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/UPU7V2ZF/Vasilescu et al. - 2014 - Continuous integration in a social-coding world E.pdf:application/pdf;arXiv.org Snapshot:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/6P7EKPP7/1512.html:text/html}
}

@article{stahl_modeling_2014,
	title = {Modeling continuous integration practice differences in industry software development},
	volume = {87},
	issn = {0164-1212},
	url = {http://www.sciencedirect.com/science/article/pii/S0164121213002276},
	doi = {10.1016/j.jss.2013.08.032},
	abstract = {Continuous integration is a software practice where developers integrate frequently, at least daily. While this is an ostensibly simple concept, it does leave ample room for interpretation: what is it the developers integrate with, what happens when they do, and what happens before they do? These are all open questions with regards to the details of how one implements the practice of continuous integration, and it is conceivable that not all such implementations in the industry are alike. In this paper we show through a literature review that there are differences in how the practice of continuous integration is interpreted and implemented from case to case. Based on these findings we propose a descriptive model for documenting and thereby better understanding implementations of the continuous integration practice and their differences. The application of the model to an industry software development project is then described in an illustrative case study.},
	pages = {48--59},
	journaltitle = {Journal of Systems and Software},
	author = {Ståhl, Daniel and Bosch, Jan},
	urldate = {2016-05-08},
	date = {2014-01},
	keywords = {agile software development, Continuous Integration},
	file = {ScienceDirect Full Text PDF:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/NFTVBEW4/Ståhl and Bosch - 2014 - Modeling continuous integration practice differenc.pdf:application/pdf;ScienceDirect Snapshot:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/CE4HP9KK/S0164121213002276.html:text/html}
}

@book{stellman_applied_2005,
	title = {Applied software project management},
	url = {https://books.google.com/books?hl=en&lr=&id=IYdJocLVa8wC&oi=fnd&pg=PR1&dq=Stellman,+Andrew%3B+Greene,+Jennifer+(2005).+Applied+Software+Project+Management&ots=zYa3fj3r4l&sig=bqQPtg2d1Gt17WNkARS3WQnQ5oQ},
	publisher = {" O'Reilly Media, Inc."},
	author = {Stellman, Andrew and Greene, Jennifer},
	urldate = {2016-05-08},
	date = {2005},
	file = {Snapshot:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/27JZJ3AC/books.html:text/html}
}

@article{fowler_continuous_2006,
	title = {Continuous integration},
	url = {http://www.dccia.ua.es/dccia/inf/asignaturas/MADS/2013-14/lecturas/10_Fowler_Continuous_Integration.pdf},
	pages = {122},
	journaltitle = {Thought-Works) http://www. thoughtworks. com/Continuous Integration. pdf},
	author = {Fowler, Martin and Foemmel, Matthew},
	urldate = {2016-05-08},
	date = {2006},
	file = {[PDF] from ua.es:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/X9JA3TTA/Fowler and Foemmel - 2006 - Continuous integration.pdf:application/pdf}
}

@article{mens_complexity_2012,
	title = {On the Complexity of Software Systems},
	volume = {45},
	issn = {0018-9162},
	doi = {10.1109/MC.2012.273},
	abstract = {Developing the tools necessary for reasoning about and understanding large, complex software systems requires interdisciplinary research that borrows from other domains where complexity similarly comes into play.},
	pages = {79--81},
	number = {8},
	journaltitle = {Computer},
	author = {Mens, T.},
	date = {2012-08},
	keywords = {complexity, Complexity theory, complex software systems, interdisciplinary research, Software engineering, software technologies, Software tools},
	file = {IEEE Xplore Abstract Record:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/FM6RN3C9/articleDetails.html:text/html;IEEE Xplore Full Text PDF:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/44SDANBR/Mens - 2012 - On the Complexity of Software Systems.pdf:application/pdf}
}

@online{spolsky_law_2002,
	title = {The Law of Leaky Abstractions - Joel on Software},
	url = {http://www.joelonsoftware.com/articles/LeakyAbstractions.html},
	abstract = {This is what I call a leaky abstraction. {TCP} attempts to provide a complete abstraction of an underlying unreliable network, but sometimes, the network leaks through the abstraction and you feel the things that the abstraction can't quite protect you from. This is but one example of what I've dubbed the Law of Leaky Abstractions},
	author = {Spolsky, Joel},
	urldate = {2016-05-08},
	date = {2002-11-11},
	file = {The Law of Leaky Abstractions - Joel on Software:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/M8TFMWQ3/LeakyAbstractions.html:text/html}
}

@article{misra_identifying_2009,
	title = {Identifying some important success factors in adopting agile software development practices},
	volume = {82},
	issn = {0164-1212},
	url = {http://www.sciencedirect.com/science/article/pii/S016412120900123X},
	doi = {10.1016/j.jss.2009.05.052},
	series = {{SI}: {TAIC} {PART} 2007 and {MUTATION} 2007},
	abstract = {Agile software development ({ASD}) is an emerging approach in software engineering, initially advocated by a group of 17 software professionals who practice a set of “lightweight” methods, and share a common set of values of software development. In this paper, we advance the state-of-the-art of the research in this area by conducting a survey-based ex-post-facto study for identifying factors from the perspective of the {ASD} practitioners that will influence the success of projects that adopt {ASD} practices. In this paper, we describe a hypothetical success factors framework we developed to address our research question, the hypotheses we conjectured, the research methodology, the data analysis techniques we used to validate the hypotheses, and the results we obtained from data analysis. The study was conducted using an unprecedentedly large-scale survey-based methodology, consisting of respondents who practice {ASD} and who had experience practicing plan-driven software development in the past. The study indicates that nine of the 14 hypothesized factors have statistically significant relationship with “Success”. The important success factors that were found are: customer satisfaction, customer collaboration, customer commitment, decision time, corporate culture, control, personal characteristics, societal culture, and training and learning.},
	pages = {1869--1890},
	number = {11},
	journaltitle = {Journal of Systems and Software},
	author = {Misra, Subhas Chandra and Kumar, Vinod and Kumar, Uma},
	urldate = {2016-05-09},
	date = {2009-11},
	keywords = {Agile Software, Success factors},
	file = {ScienceDirect Full Text PDF:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/H6F7ZGNS/Misra et al. - 2009 - Identifying some important success factors in adop.pdf:application/pdf;ScienceDirect Snapshot:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/3DCXTR46/S016412120900123X.html:text/html}
}

@article{oreilly_what_2007,
	title = {What is Web 2.0: Design patterns and business models for the next generation of software},
	url = {http://papers.ssrn.com/sol3/Papers.cfm?abstract_id=1008839},
	shorttitle = {What is Web 2.0},
	pages = {17},
	number = {1},
	journaltitle = {Communications \& strategies},
	author = {O'reilly, Tim},
	urldate = {2016-05-21},
	date = {2007},
	file = {[PDF] from uni-muenchen.de:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/Q4GFNZPP/O'reilly - 2007 - What is Web 2.0 Design patterns and business mode.pdf:application/pdf;Snapshot:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/KQPDS7GA/Papers.html:text/html}
}

@article{lemmens_open_2008,
	title = {Open Source success},
	volume = {22},
	url = {http://s3.cleverelephant.ca/giminternational-ramsey-2008-10.pdf},
	pages = {8--9},
	number = {10},
	journaltitle = {{GIM} Int},
	author = {Lemmens, Mathias},
	urldate = {2016-05-23},
	date = {2008},
	file = {[PDF] from cleverelephant.ca:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/CVXKKE8Q/Lemmens - 2008 - Open Source success.pdf:application/pdf}
}

@online{baldwin_4_2014,
	title = {4 reasons companies say yes to open source},
	url = {http://www.computerworld.com/article/2486991/app-development-4-reasons-companies-say-yes-to-open-source.html},
	abstract = {Open source is free and widely available, but its benefits don't stop there. Enterprises are embracing it for its agility, a quality they value above all in these times of marketplace upheaval.},
	titleaddon = {Computerworld},
	author = {Baldwin, Howard},
	urldate = {2016-05-23},
	date = {2014-01-06},
	file = {Snapshot:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/PVIS5CWX/app-development-4-reasons-companies-say-yes-to-open-source.html:text/html}
}

@online{_open_????,
	title = {Open source is about more than cost savings},
	url = {https://opensource.com/business/15/5/open-source-about-more-cost-savings},
	abstract = {The move to open source technology is a much more fundamental shift than just cost savings, and represents a trend that is starting to cross industries, even the most traditional ones, from financial services through telcos.},
	titleaddon = {Opensource.com},
	urldate = {2016-05-23},
	file = {Snapshot:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/J2HGVEA4/open-source-about-more-cost-savings.html:text/html}
}

@inproceedings{vasilescu_stackoverflow_2013,
	title = {{StackOverflow} and {GitHub}: Associations between Software Development and Crowdsourced Knowledge},
	doi = {10.1109/SocialCom.2013.35},
	shorttitle = {{StackOverflow} and {GitHub}},
	abstract = {Stack Overflow is a popular on-line programming question and answer community providing its participants with rapid access to knowledge and expertise of their peers, especially benefitting coders. Despite the popularity of Stack Overflow, its role in the work cycle of open-source developers is yet to be understood: on the one hand, participation in it has the potential to increase the knowledge of individual developers thus improving and speeding up the development process. On the other hand, participation in Stack Overflow may interrupt the regular working rhythm of the developer, hence also possibly slow down the development process. In this paper we investigate the interplay between Stack Overflow activities and the development process, reflected by code changes committed to the largest social coding repository, {GitHub}. Our study shows that active {GitHub} committers ask fewer questions and provide more answers than others. Moreover, we observe that active Stack Overflow askers distribute their work in a less uniform way than developers that do not ask questions. Finally, we show that despite the interruptions incurred, the Stack Overflow activity rate correlates with the code changing activity in {GitHub}.},
	eventtitle = {2013 International Conference on Social Computing ({SocialCom})},
	pages = {188--195},
	booktitle = {2013 International Conference on Social Computing ({SocialCom})},
	author = {Vasilescu, B. and Filkov, V. and Serebrenik, A.},
	date = {2013-09},
	keywords = {Communities, crowdsourced knowledge, Electronic mail, {GitHub}, Indexes, knowledge based systems, Merging, online programming question-and-answer community, Productivity, Rhythm, social coding repository, Social Media, software, Software Development, software maintenance, {StackOverflow}},
	file = {IEEE Xplore Abstract Record:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/C4P46NDX/abs_all.html:text/html;IEEE Xplore Full Text PDF:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/5M4C2EEN/Vasilescu et al. - 2013 - StackOverflow and GitHub Associations between Sof.pdf:application/pdf}
}

@article{mathiassen_business_2006,
	title = {Business agility and diffusion of information technology},
	volume = {15},
	url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.296.5817&rep=rep1&type=pdf},
	pages = {116},
	number = {2},
	journaltitle = {European Journal of Information Systems},
	author = {Mathiassen, Lars and Pries-Heje, Jan},
	urldate = {2016-05-23},
	date = {2006},
	file = {[PDF] from psu.edu:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/BF84AIFI/Mathiassen and Pries-Heje - 2006 - Business agility and diffusion of information tech.pdf:application/pdf}
}

@article{benner_exploitation_2003,
	title = {Exploitation, exploration, and process management: The productivity dilemma revisited},
	volume = {28},
	url = {http://amr.aom.org/content/28/2/238.short},
	shorttitle = {Exploitation, exploration, and process management},
	pages = {238--256},
	number = {2},
	journaltitle = {Academy of management review},
	author = {Benner, Mary J. and Tushman, Michael L.},
	urldate = {2016-05-23},
	date = {2003},
	file = {[PDF] from psu.edu:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/BKC5FN2Z/Benner and Tushman - 2003 - Exploitation, exploration, and process management.pdf:application/pdf;Snapshot:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/A3XAHDMU/238.html:text/html}
}

@online{american_society_for_quality_continuous_????,
	title = {Continuous Improvement Model - Learning Resources{\textbar} {ASQ}},
	url = {http://asq.org/learn-about-quality/continuous-improvement/overview/overview.html},
	author = {American Society for Quality},
	urldate = {2016-06-02},
	file = {Continuous Improvement Model - Learning Resources| ASQ:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/4BVVI2KA/overview.html:text/html}
}

@online{ashkenas_its_2012,
	title = {It’s Time to Rethink Continuous Improvement},
	url = {https://hbr.org/2012/05/its-time-to-rethink-continuous},
	abstract = {Six Sigma, Kaizen, Lean, and other variations on continuous improvement can be hazardous to your organization’s health. While it may be heresy to say this, recent evidence from Japan and elsewhere suggests that it’s time to question these methods. Admittedly, continuous improvement once powered Japan’s economy. Japanese manufacturers in the 1950s had a reputation for […]},
	titleaddon = {Harvard Business Review},
	author = {Ashkenas, Ron},
	urldate = {2016-06-02},
	date = {2012-05-08},
	file = {Snapshot:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/2Z4QA9GT/its-time-to-rethink-continuous.html:text/html}
}

@inproceedings{beland_measurement_2012,
	title = {A Measurement Framework to Support Continuous Improvement in Software Intensive Organizations},
	doi = {10.1109/IWSM-MENSURA.2012.38},
	abstract = {This paper presents a quantitative management framework for continuous improvement initiatives to ensure the sustainability of earnings and value in software intensive organizations ({SIO}). Three groups of measures are proposed to monitor the impact of changes introduced by continuous improvement initiatives: a network of dashboards, a performance measurement system ({PMS}) and a strategy management system ({SMS}). The proposed framework was experimented in two small organizations with tailored quantitative models and tools to support decision making at all levels of management.},
	eventtitle = {2012 Joint Conference of the 22nd International Workshop on Software Measurement and the 2012 Seventh International Conference on Software Process and Product Measurement ({IWSM}-{MENSURA})},
	pages = {215--220},
	booktitle = {2012 Joint Conference of the 22nd International Workshop on Software Measurement and the 2012 Seventh International Conference on Software Process and Product Measurement ({IWSM}-{MENSURA})},
	author = {Béland, S. and Abran, A.},
	date = {2012-10},
	keywords = {Best practices, component, continuous improvement, continuous improvement initiatives, dashboards, decision making, earnings sustainability, Monitoring, Organizations, performance evaluation, performance measurement system, quantitative management framework, quantitative models, software, software intensive organizations, software management, Software measurement, Software process improvement, Software process improvement balanced scorecard, Standards organizations, strategy management system, value sustainability},
	file = {IEEE Xplore Abstract Record:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/4N3NUGTM/abs_all.html:text/html;IEEE Xplore Full Text PDF:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/SD84SE9J/Béland and Abran - 2012 - A Measurement Framework to Support Continuous Impr.pdf:application/pdf}
}

@article{bessant_rediscovering_1994,
	title = {Rediscovering continuous improvement},
	volume = {14},
	issn = {0166-4972},
	url = {http://www.sciencedirect.com/science/article/pii/0166497294900671},
	doi = {10.1016/0166-4972(94)90067-1},
	abstract = {Continuous improvement ({CI}) is increasingly being seen as an important complement to more radical, step-change forms of innovation. In essence, it involves a company-wide process of enabling a continuing stream of focused incremental innovation. It has found particular application in recent years in the area of quality improvement, but the principle can be applied to many other divisions of business performance. Although simple to define, the achievement of such {CI} activity and its maintenance over the long term is a major source of difficulty. This paper reports on research in this area and highlights key areas within {CI} which need to be addressed.},
	pages = {17--29},
	number = {1},
	journaltitle = {Technovation},
	author = {Bessant, J. and Caffyn, S. and Gilbert, J. and Harding, R. and Webb, S.},
	urldate = {2016-06-02},
	date = {1994-02-01},
	file = {ScienceDirect Snapshot:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/MSK4TMGD/0166497294900671.html:text/html}
}

@online{schroeder_americas_????,
	title = {America’s Most Successful Export to Japan: Continuous Improvement Programs},
	url = {http://sloanreview.mit.edu/article/americas-most-successful-export-to-japan-continuous-improvement-programs/},
	shorttitle = {America’s Most Successful Export to Japan},
	titleaddon = {{MIT} Sloan Management Review},
	author = {Schroeder, Dean M and Robinson, Alan G},
	urldate = {2016-06-02},
	file = {Snapshot:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/I43XFMZR/americas-most-successful-export-to-japan-continuous-improvement-programs.html:text/html}
}

@article{zaytsev_increasing_2013,
	title = {Increasing quality and managing complexity in neuroinformatics software development with continuous integration},
	volume = {6},
	url = {http://journal.frontiersin.org.offcampus.lib.washington.edu/article/10.3389/fninf.2012.00031/full},
	doi = {10.3389/fninf.2012.00031},
	abstract = {High quality neuroscience research requires accurate, reliable and well maintained neuroinformatics applications. As software projects become larger, offering more functionality and developing a denser web of interdependence between their component parts, we need more sophisticated methods to manage their complexity. If complexity is allowed to get out of hand, either the quality of the software or the speed of development suffer, and in many cases both. To address this issue, here we develop a scalable, low-cost and open source solution for continuous integration ({CI}), a technique which ensures the quality of changes to the code base during the development procedure, rather than relying on a pre-release integration phase. We demonstrate that a {CI}-based workflow, due to rapid feedback about code integration problems and tracking of code health measures, enabled substantial increases in productivity for a major neuroinformatics project and additional benefits for three further projects. Beyond the scope of the current study, we identify multiple areas in which {CI} can be employed to further increase the quality of neuroinformatics projects by improving development practices and incorporating appropriate development tools. Finally, we discuss what measures can be taken to lower the barrier for developers of neuroinformatics applications to adopt this useful technique.},
	pages = {31},
	journaltitle = {Front. Neuroinform},
	author = {Zaytsev, Yury V. and Morrison, Abigail},
	urldate = {2016-06-02},
	date = {2013},
	keywords = {complexity management, process management, quality control, Software Development, testing}
}

@article{sivanandan_fail_2015,
	title = {Fail Fast - Fail Often: Enhancing Agile Methodology using Dynamic Regression, Code Bisector and Code Quality in Continuous Integration ({CI})},
	url = {http://arxiv.org/abs/1506.08725},
	shorttitle = {Fail Fast - Fail Often},
	abstract = {Agile practices are receiving considerable attention from industry as an alternative to traditional software development approaches. However, there are a number of challenges in combining Agile [2] with Test-driven development ({TDD}) [10] practices, cloud deployments, continuous integration ({CI}), non-stop performance, load, security and accessibly testing. From these challenges; Continuous Integration is a relatively an approach widely discussed and practiced in software testing. This paper describes an approach for improved Agile Methodology using Code Quality, Code Bisector and Dynamic Regression in Continuous Integration. The set of tools used for this analysis, design and development are Jenkins, Robot Framework [4], Perforce and Git.},
	journaltitle = {{arXiv}:1506.08725 [cs]},
	author = {Sivanandan, Sandeep},
	urldate = {2016-06-02},
	date = {2015-06-29},
	eprinttype = {arxiv},
	eprint = {1506.08725},
	keywords = {Computer Science - Software Engineering},
	file = {arXiv\:1506.08725 PDF:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/26N4NVTK/Sivanandan - 2015 - Fail Fast - Fail Often Enhancing Agile Methodolog.pdf:application/pdf;arXiv.org Snapshot:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/32AT8T3C/1506.html:text/html}
}

@inproceedings{sta_ahl_experienced_2013,
	title = {Experienced benefits of continuous integration in industry software product development: A case study},
	url = {http://www.actapress.com/PDFViewer.aspx?paperId=455452},
	shorttitle = {Experienced benefits of continuous integration in industry software product development},
	pages = {736--743},
	booktitle = {The 12th {IASTED} International Conference on Software Engineering,(Innsbruck, Austria, 2013)},
	author = {St\{{\textbackslash}textbackslash\}a ahl, Daniel and Bosch, Jan},
	urldate = {2016-06-02},
	date = {2013},
	file = {[PDF] from researchgate.net:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/RPHM9SIV/Sta ahl and Bosch - 2013 - Experienced benefits of continuous integration in .pdf:application/pdf;Snapshot:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/G64MUQ84/PaperInfo.html:text/html}
}

@article{rosenberg_law_2007,
	title = {The Law of Leaky Abstractions},
	volume = {110},
	issn = {1099274X},
	url = {http://offcampus.lib.washington.edu/login?url=http://search.ebscohost.com/login.aspx?direct=true&db=mth&AN=24586584&site=ehost-live},
	abstract = {An excerpt from the book "Dreaming in Code: Two Dozen Programmers, Three Years, 4,732 Bugs, and One Quest for Transcendent Software," by Scott Rosenberg is presented.},
	pages = {46--47},
	number = {1},
	journaltitle = {Technology Review},
	author = {{ROSENBERG}, Scott},
	urldate = {2016-06-02},
	date = {2007-02-01},
	keywords = {{DREAMING} in Code: Two Dozen Programmers, Three Years, 4732 Bugs \& One Quest for Transcendent Software (Book), {ROSENBERG}, Scott},
	file = {EBSCO Full Text:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/JFQS4SDB/2007 - The Law of Leaky Abstractions.pdf:application/pdf}
}

@book{beck_extreme_2000,
	title = {Extreme programming explained: embrace change},
	url = {https://books.google.com/books?hl=en&lr=&id=G8EL4H4vf7UC&oi=fnd&pg=PR13&dq=+Extreme+Programming+Explained:+Embrace+Change.+1st+Edn.+Reading,+MA:+Addison-Wesley+Professional.&ots=j9yHAwiSvq&sig=66BvysAz2cFNZsdvUi5jTxsVI30},
	shorttitle = {Extreme programming explained},
	publisher = {addison-wesley professional},
	author = {Beck, Kent},
	urldate = {2016-06-02},
	date = {2000},
	file = {[PDF] from javacup.ir:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/F8JZHDZ3/Beck - 2000 - Extreme programming explained embrace change.pdf:application/pdf;Snapshot:/home/gautam/.mozilla/firefox/mwad0hks.default/zotero/storage/HSEUNPAP/books.html:text/html}
}